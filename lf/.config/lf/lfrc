set dircounts
set errorfmt "\033[7;31;40m%s\033[0m"
set filesep "\n"  # default already
set icons true
set ifs "\n"
set ignorecase true
set incsearch
set info size:time
set nomouse
set period 1
set preview true
set previewer ~/.config/lf/preview.sh
set ratios 1:2:2
set scrolloff 10
set shell zsh
set shellopts '-eu:--shwordsplit'

# Override hidden to show .* but hide stuff we don't actually care about
set hiddenfiles .DS_Store:__pycache__*:*.pyc:*.o:node_modules:*.elc:*~:folder*.ico:folder*.jpg:folder*.png

#==============================================================================
# Basic Maps
#==============================================================================
map <esc> quit
map - updir
map <tab> shell
map x cut


#==============================================================================
# Custom Commands
#==============================================================================

# Open files
cmd open ${{
  case $(file --mime-type $f -b) in
    text/*) $EDITOR $fx;;
    *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
  esac
}}
map <enter> open

# Prompt for directory name/path and make it
cmd mkdir %{{
  printf " Directory Name: "
  read ans
  mkdir -p $ans
}}
map d mkdir

# Prompt for filename, touch it, and open it (huehuehue)
cmd mkfile %{{
  printf " File Name: "
  read ans
  touch $ans
}}
map t mkfile

# Prompt for filename and rename
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
map r push :rename<space>

# Trash a file to system trash
cmd trash %set -f; trash $fx
map D trash

# Smartly extract compressed files
cmd extract ${{
  set -f
    case $f in
      *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
          *.tar.xz|*.txz) tar xJvf $f;;
            *.zip) unzip $f;;
              *.rar) unrar x $f;;
                *.7z) 7z x $f;;
              esac
              }}

# Tar/GZ a file or files
cmd tar ${{
  set -f
  mkdir $1
  cp -r $fx $1
  tar czf $1.tar.gz $1
  rm -rf $1
}}
