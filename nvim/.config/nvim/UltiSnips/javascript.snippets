#==============================================================================
# JAVASCRIPT
#==============================================================================

snippet im
import { $1 } from '$0';
endsnippet

snippet imd
import $1 from '$0';
endsnippet

snippet if
if ($1) {
	$0
}
endsnippet

snippet ifel
if ($1) {
	$2
}
else {
	$0
}
endsnippet

snippet func
${1:function }${2:functionName}(${3:arguments}) {
	$0
}
endsnippet

snippet cl
console.log('${1:LABEL}', $0);
endsnippet

snippet c{
console.log({ $0 });
endsnippet

snippet esdis
/* eslint-disable-next-line ${0:react-hooks/exhaustive-deps} */
endsnippet



#==============================================================================
# JEST
#==============================================================================

snippet desc
describe("$1", () => {
	$0
});
endsnippet

snippet con
context("$1", () => {
	$0
});
endsnippet

snippet it
it("$1", ${2:async }() => {
	$0
});
endsnippet

snippet test
test("$1", ${2:async }() => {
	$0
});
endsnippet

snippet be
before${1:Each}(${2:async }() => {
	$0
});
endsnippet

snippet af
after${1:Each}(${2:async }() => {
	$0
});
endsnippet

snippet exp
expect($1).${2:toEqual}($3);
endsnippet

snippet nockrecord
nock.recorder.rec({ output_objects: true });
endsnippet



#==============================================================================
# CYPRESS
#==============================================================================

snippet within
cy.get('[data-testid="$1"]').within(() => {
	$0
});
endsnippet

snippet withid
cy.withinTestId('${1:test-id}', () => {
	$0
});
endsnippet

snippet command
Cypress.Commands.${1:add}('${2:commands}', (${3:originalFn}) => {
	$0
});
endsnippet



#==============================================================================
# STYLED COMPONENTS
#==============================================================================

snippet sprop
${props => props.${1:prop}};
endsnippet

snippet stheme
${props => props.theme.${1:prop}};
endsnippet

snippet scond
${({ ${1:prop} }) =>
	$1 &&
	css\`
		$0
	\`};
endsnippet
